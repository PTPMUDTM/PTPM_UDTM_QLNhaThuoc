<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imgCL1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v15.1" name="DevExpress.Utils.v15.1, Version=15.1.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imgCL1.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v15.1" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYxNS4xLCBWZXJzaW9uPTE1LjEu
        NS4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAABAAAAAQAAAACQUAAAAP
        BQAAAMsMAAACQQIAAIlQTkcNChoKAAAADUlIRFIAAAAQAAAAEAgGAAAAH/P/YQAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAHjSURBVDhPY8AHQmJTi4OjU2yhXOJBUFCi0tGTZ//HZRT+
        b+6e/N8nLOE/VIowsHMLSLO19/pvae/5X8fACmhI0f8EoEFQaeJAXrT7f3Mjo/9ySjr/J81e8t8zOIY0
        Ax7dOv8fhPdvWPBfTcfiv5ahNWkG3Dp/8P/Ncwf+n9u//v+83iqgZi7SDNi1Ysr/U7tX/t+3bvb/pRMq
        /hvoGN2FShEPdi6f9H9uW+7/9sKY/0unNhPvgti0/G5n3/D/L1++/L8X6IK18/v+79+//7+1qz9xhhRW
        tfzvm7Ho//fv3/+/e/fu//Pnz//v2Xfwf1RK3n8tEzswhirFBAERCXMCo1P/d0yY8f/ijcf/+ydP+w8C
        i1dv/l/V0vc/vbD6v5C0Km4DFLRMwDa4BUT+59/4+v93oObk3LL/MWkF/0PjM/87+4b9lwCmjcaWdm+o
        FlSgY+rwXx0Y5xZOPv9VglrAGoxt3f/rWTiBcURSzn+QJZLKOthdoapv+V/b1P6/kY3bf0fvkP/Sitr/
        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
</value>
  </data>
</root>